%h2#comments Комментарии:
.clear
- maxCommentLevel = 8
- if user_signed_in?
  = render :partial => "shared/subscribe_comments_block", :locals => {:post_id => post.id}
%div
  %ul.comments#comment-tree
    -if !post.comments.find_by_parent_id(nil).nil?
      -#- comments = post.comments.find_by_parent_id(nil).all_children
      - comments = post.comments.find_by_parent_id(nil).descendants
      -#- comments = post.comments.root.siblings
      - if !comments.empty?
        - comments.each do |item|
          %li{:id => "comment-#{item.id}", :class => "comment"}
            - author = User.find(item.author_id)
            - avatarUrl = author.profile.photo.url(:thumb)
            - linkToComment = (post_item_path(post) + "comment-#{item.id}")
            - linkToProfile = author.footballer.nil? ? linkToComment : user_path(author)
            - shiftComment = (item.level > maxCommentLevel) ? maxCommentLevel : item.level
            
            .commentContent{:style=>"margin-left: #{20 * (shiftComment-1)}px; "}            
              - if avatarUrl
                .avatar
                  = image_tag "#{avatarUrl}", :width => "50", :height => "50", :alt => "Аватарка пользователя #{author.username}"
              
              %dl.commentInfo
                %dt.commentAuthor
                  = link_to "#{author.username}", linkToProfile, :class => author.footballer.nil? ? "username" : "username registered", :title => author.footballer.nil? ? "" : "Перейти на профиль пользователя #{author.username}" |
                %dd.datetime
                  = Russian::strftime(item.created_at, "%d %B %Y; %H:%M")
                %dd.options
                  %ul
                    %li
                      = link_to "Ссылка на комментарий", linkToComment, :class => "linkToComment", :title => "Ссылка на комментарий"
                    - if (item.level != 1)
                      %li
                        = link_to "На что ответ?", "#comment-#{item.parent_id}", :class => "goToParent", :title => "На что ответ?"

                        
              %div.commentBody
                = show_comment(post, item)

            - if user_signed_in?
              = link_to  "ответить", "#", :class => "button commentReply", :"data-options" => "{\"id\": \"#{item.id}\", \"shiftComment\": \"#{item.level}\", \"postId\": \"#{post.id}\"}"

- unless user_signed_in?
  = link_to 'Зарегистрируйтесь', new_user_path
  -# {:controller => :users, :action => :new}
  или
  = link_to 'Войдите', session_path(:user)
  -# {:controller => :users, :action => :sign_in}
  чтобы комментировать!
- else
  = javascript_include_tag 'jquery-plugins/jquery_form/jquery.form'
  = javascript_include_tag 'application/comment/comment.js'
  .clear
  %div.newComment.postCommentBox
    %h2
      Зафутболить коммент:
    .error#comment-errors{:style => "display: none;"}
    - form_for :comment, Comment.new, :url => {:controller => :comment, :action => :create, :id => 'new'}, :html => {:id => 'newComment', :method => :post} do |f|
      = f.hidden_field :post_id, :value => post.id
      %div.txtAreaBox
        = f.text_area :body
      .clear
      %p
        %input.colored-button.primary.big{:type=>"submit", :value => "Отправить"}/
    .loader

